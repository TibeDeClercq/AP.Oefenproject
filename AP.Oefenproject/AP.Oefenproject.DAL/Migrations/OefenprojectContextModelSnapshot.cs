// <auto-generated />
using AP.Oefenproject.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AP.Oefenproject.DAL.Migrations
{
    [DbContext(typeof(OefenprojectContext))]
    partial class OefenprojectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Circuit", b =>
                {
                    b.Property<int>("Circuit_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Circuit_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Country_id")
                        .HasColumnType("int");

                    b.Property<string>("House_number")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("Length")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Circuit_id");

                    b.HasIndex("Country_id");

                    b.ToTable("tblCircuits", "Circuit");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Country", b =>
                {
                    b.Property<int>("Country_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Country_id");

                    b.ToTable("tblCountries", "Country");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Pilot", b =>
                {
                    b.Property<int>("Pilot_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date_of_birth")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Length")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<int>("License_nr")
                        .HasMaxLength(9)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Picture_path")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Weight")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.HasKey("Pilot_id");

                    b.HasIndex("License_nr")
                        .IsUnique();

                    b.ToTable("tblPilots", "Pilot");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Race", b =>
                {
                    b.Property<int>("Race_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Circuit_id")
                        .HasColumnType("int");

                    b.Property<string>("End_date")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Race_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Season_id")
                        .HasColumnType("int");

                    b.Property<string>("Start_date")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Race_id");

                    b.HasIndex("Circuit_id");

                    b.HasIndex("Season_id");

                    b.ToTable("tblRaces", "Race");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.RacePilotTeam", b =>
                {
                    b.Property<int>("Pilot_id")
                        .HasColumnType("int");

                    b.Property<int>("Race_id")
                        .HasColumnType("int");

                    b.Property<int>("Team_id")
                        .HasColumnType("int");

                    b.HasKey("Pilot_id", "Race_id");

                    b.HasIndex("Race_id");

                    b.HasIndex("Team_id");

                    b.ToTable("tblRacePilotTeams", "RacePilotTeam");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Season", b =>
                {
                    b.Property<int>("Season_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("End_date")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Season_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Serie_id")
                        .HasColumnType("int");

                    b.Property<string>("Start_date")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Season_id");

                    b.HasIndex("Serie_id");

                    b.ToTable("tblSeasons", "Season");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Serie", b =>
                {
                    b.Property<int>("Serie_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("End_date")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Serie_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Sort_order")
                        .HasMaxLength(9)
                        .HasColumnType("int");

                    b.Property<string>("Start_date")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Serie_id");

                    b.ToTable("tblSeries", "Serie");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Team", b =>
                {
                    b.Property<int>("Team_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Team_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Team_id");

                    b.ToTable("tblTeams", "Team");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Circuit", b =>
                {
                    b.HasOne("AP.Oefenproject.DAL.Model.Country", "Country")
                        .WithMany("Circuits")
                        .HasForeignKey("Country_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Race", b =>
                {
                    b.HasOne("AP.Oefenproject.DAL.Model.Circuit", "Circuit")
                        .WithMany("Races")
                        .HasForeignKey("Circuit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AP.Oefenproject.DAL.Model.Season", "Season")
                        .WithMany("Races")
                        .HasForeignKey("Season_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Circuit");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.RacePilotTeam", b =>
                {
                    b.HasOne("AP.Oefenproject.DAL.Model.Pilot", "Pilot")
                        .WithMany("RacePilotTeams")
                        .HasForeignKey("Pilot_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AP.Oefenproject.DAL.Model.Race", "Race")
                        .WithMany("RacePilotTeams")
                        .HasForeignKey("Race_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AP.Oefenproject.DAL.Model.Team", "Team")
                        .WithMany("RacePilotTeams")
                        .HasForeignKey("Team_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pilot");

                    b.Navigation("Race");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Season", b =>
                {
                    b.HasOne("AP.Oefenproject.DAL.Model.Serie", "Serie")
                        .WithMany("Seasons")
                        .HasForeignKey("Serie_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Serie");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Circuit", b =>
                {
                    b.Navigation("Races");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Country", b =>
                {
                    b.Navigation("Circuits");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Pilot", b =>
                {
                    b.Navigation("RacePilotTeams");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Race", b =>
                {
                    b.Navigation("RacePilotTeams");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Season", b =>
                {
                    b.Navigation("Races");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Serie", b =>
                {
                    b.Navigation("Seasons");
                });

            modelBuilder.Entity("AP.Oefenproject.DAL.Model.Team", b =>
                {
                    b.Navigation("RacePilotTeams");
                });
#pragma warning restore 612, 618
        }
    }
}
